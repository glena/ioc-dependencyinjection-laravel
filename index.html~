<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>Laravel &amp; Repository Pattern</title>

		<meta name="description" content="Small talk about implementing Repository Pattern in Laravel 4">
		<meta name="author" content="Germ&aacute;n Lena">

		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="css/reveal.min.css">
		<link rel="stylesheet" href="css/theme/germanlena.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', include the PDF print sheet -->
		<script>
			if( window.location.search.match( /print-pdf/gi ) ) {
				var link = document.createElement( 'link' );
				link.rel = 'stylesheet';
				link.type = 'text/css';
				link.href = 'css/print/pdf.css';
				document.getElementsByTagName( 'head' )[0].appendChild( link );
			}
		</script>

		<!--[if lt IE 9]>
		<script src="lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>
		<div id="page-background"></div>

		<div class="reveal">

			<div class="slides">
				<section class="main">
					<h1>Laravel, ReactPHP &amp; Ratchet</h1>
					<h3>Qué es y como integrarlo en nuestro proyecto Laravel</h3>
					<p>
						<a href="http://germanlena.com.ar">Germ&aacute;n Lena</a> / <a href="http://twitter.com/german_lena">@german_lena</a>
					</p>
				</section>
		
				<section>
						<section>
							<h2>¿Qué es ReactPHP?</h2>
                            <ul>
                                <li class="fragment">Event-driven, non-blocking I/O with PHP.</li>
                                <li class="fragment">Programación basada en eventos.</li>
                                <li class="fragment">Single thread, asincronico, no bloqueante.</li>
                                <li class="fragment">Basado en "Reactor pattern" (patron de diseño de programación concurrente).</li>
                            </ul>
						</section>
                        
                        <section>
							<h2>Internamente</h2>
                            <ul>
                                <li class="fragment">Core basado en biblioteca de Streams de PHP.</li>
                                <li class="fragment">Main event loop: stream_select (duerme el proceso hasta que un socket se activa).</li>
                                <li class="fragment">Altamente inspirado en Node.js</li>
                            </ul>
						</section>
				</section>
				
				<section>
                    <h2>Ratchet</h2>
                    <ul>
                        <li class="fragment">Implementa Websockets sobre ReactPHP.</li>
                        <li class="fragment">Provee un stack de componentes (I/O, HTTP, WS, SESSION, WAMP, APP).</li>
                        <li class="fragment">Similar a SocketIO (NodeJS)</li>
                    </ul>
				</section>


				<section>
					<section>
						<h2>Hagamos un chat bien simple</h2>
						<ul>
                          <li class="fragment">SPA hecha el Laravel</li>
                          <li class="fragment">Ratchet + React para las comunicaciones</li>
						</ul>
					</section>
					
					<section>
						<h2>Creemos el Servidor Web Sockets</h2>
						
						<ul>
                          <li class="fragment">En un nuevo workbench (para abstraerlo del codigo de la app)</li>
                          <li class="fragment">php artisan workbench autor/paquete</li>
						</ul>
					</section>
					
					<section>
						<h2>Estructura</h2>
						<ul>
                          <li class="fragment">Command: va a hacer el bootstrap del servidor.</li>
                          <li class="fragment">Manager: va a manejar las conexiones.</li>
                          <li class="fragment">UserConnection: va a representar cada una de las conexiones.</li>
						</ul>
					</section>
					
				</section>

				<section>
						<section>
								<h2>Command</h2>
								<pre>
										<code data-trim class="hljs php">
public function __construct(ManagerInterface $manager)
    {
        parent::__construct();

        $this->manager = $manager;

        $this->manager->getEmitter()->on("open",
          function(UserConnectionInterface $user)
          {
              $this->line("
                  <info>#{$user->getId()} connected.</info>
              ");
          }
        );
        
        ...
										</code>
								</pre>
						</section>
                        
                        
                        <section>
								<h2>Command</h2>
								<pre>
										<code data-trim class="hljs php">
$port = (integer) Config::get('app.streams_port');

$server = IoServer::factory(
    new HttpServer(
        new WsServer(
            $this->manager
        )
    ),
    $port
);
  
$server->run();
										</code>
								</pre>
						</section>
		
						<section>
							<h2>UserConnection</h2>

                            <div style="background:white;">
                              <img src="/images/user_status.png" />
                            </div>

						</section>
                        
                        <section>
								<h2>Conexión desde JS</h2>
								<pre>
										<code data-trim class="hljs js">

var socket = new WebSocket("ws://127.0.0.1:7778/");
socket.addEventListener("open", function (e) {
    console.log("open: ", e);
});
socket.addEventListener("error", function (e) {
    console.log("error: ", e);
});
socket.addEventListener("message", function (e) {
    console.log("message: ", JSON.parse(e.data));
});
socket.send('{"message":"hello!"}');

										</code>
								</pre>
						</section>
						
				</section>

				<section>
					<h1>FIN</h1>
					<img src="images/end.gif" />
				</section>
				
				<section>
						<h2>Referencias</h2>
						<ul>
                            <li>http://reactphp.org/ (miren los videos!!)</li>
                            <li>http://socketo.me (Ratchet)</li>
                            <li>https://medium.com/laravel-4/laravel-4-real-time-chat-eaa550829538</li>
                            <li>http://es.wikipedia.org/wiki/State_(patr%C3%B3n_de_dise%C3%B1o) (state pattern)</li>
						</ul>
				</section>

			</div>

		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: 'germanlena', 
				transition: 'linear', 

				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() {hljs.initHighlightingOnLoad();} },
					{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});
			
			var backgroundEl = document.getElementById('page-background');
			
			Reveal.addEventListener( 'slidechanged', function( event ) {
				
				if (!Reveal.isFirstSlide()) {
						backgroundEl.className = 'blured';	
				}
				else
				{
						backgroundEl.className = '';
				}
			} );

		</script>

<script type="text/javascript">

var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-51467836-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; 
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

</script>

	</body>
</html>
